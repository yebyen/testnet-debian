Description: Did not want checkpoints in my testnet
 Checkpoints enforce that the blocks are the ones that were known at the
 time bitcoind was built.  In newer bitcoind (0.8.0) there is an option to
 disable checkpoints at runtime, but for us this patch was needed.
 .
 bitcoin (0.7.2-4) unstable; urgency=low
 .
   [ Kingdon Barrett ]
   * Disable checkpoints, disable test of checkpointing.
Author: Kingdon Barrett <kingdon@tuesdaystudios.com>
Last-Update: <2013-03-05>

--- bitcoin-0.7.2.orig/src/checkpoints.cpp
+++ bitcoin-0.7.2/src/checkpoints.cpp
@@ -43,12 +43,14 @@ namespace Checkpoints
         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);
 
         MapCheckpoints::const_iterator i = checkpoints.find(nHeight);
-        if (i == checkpoints.end()) return true;
-        return hash == i->second;
+        //if (i == checkpoints.end()) return true;
+        return true;
+        //return hash == i->second;
     }
 
     int GetTotalBlocksEstimate()
     {
+        return 0;
         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);
 
         return checkpoints.rbegin()->first;
@@ -56,6 +58,7 @@ namespace Checkpoints
 
     CBlockIndex* GetLastCheckpoint(const std::map<uint256, CBlockIndex*>& mapBlockIndex)
     {
+        return NULL;
         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);
 
         BOOST_REVERSE_FOREACH(const MapCheckpoints::value_type& i, checkpoints)
--- bitcoin-0.7.2.orig/src/test/Checkpoints_tests.cpp
+++ bitcoin-0.7.2/src/test/Checkpoints_tests.cpp
@@ -21,14 +21,14 @@ BOOST_AUTO_TEST_CASE(sanity)
 
     
     // Wrong hashes at checkpoints should fail:
-    BOOST_CHECK(!Checkpoints::CheckBlock(11111, p134444));
-    BOOST_CHECK(!Checkpoints::CheckBlock(134444, p11111));
+    //BOOST_CHECK(!Checkpoints::CheckBlock(11111, p134444));
+    //BOOST_CHECK(!Checkpoints::CheckBlock(134444, p11111));
 
     // ... but any hash not at a checkpoint should succeed:
     BOOST_CHECK(Checkpoints::CheckBlock(11111+1, p134444));
     BOOST_CHECK(Checkpoints::CheckBlock(134444+1, p11111));
 
-    BOOST_CHECK(Checkpoints::GetTotalBlocksEstimate() >= 134444);
+    //BOOST_CHECK(Checkpoints::GetTotalBlocksEstimate() >= 134444);
 }    
 
 BOOST_AUTO_TEST_SUITE_END()
